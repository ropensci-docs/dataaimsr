[{"path":"https://docs.ropensci.org/dataaimsr/CONTRIBUTING.html","id":"how-to-contribute","dir":"","previous_headings":"","what":"How to contribute","title":"NA","text":"Government employees, public members private sector encouraged contribute repository forking submitting pull request. (new GitHub, might start basic tutorial check detailed guide pull requests.) Pull requests evaluated repository guardians schedule deemed beneficial committed master. contributors retain original copyright stuff, contributing project, grant world-wide, royalty-free, perpetual, irrevocable, non-exclusive, transferable license users terms license project distributed.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/dataaimsr/LICENSE.html","id":"the-mit-license-mit","dir":"","previous_headings":"","what":"The MIT License (MIT)","title":"Package licensed under the “MIT License (MIT)”","text":"Copyright (c) 2020- Australian Institute Marine Science Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://docs.ropensci.org/dataaimsr/articles/navigating.html","id":"how-this-package-works","dir":"Articles","previous_headings":"","what":"How this package works","title":"Navigating dataaimsr","text":"dataaimsr contains two sets monitoring data collected AIMS—Australian Institute Marine Science—since 1980’s: Weather Station dataset contains encompasses data different parameters (e.g. Air Temperature, Air Pressure, Chlorophyll, many others); Sea Water Temperature Loggers dataset contains records (guessed !) sea water temperature different sites water depths. datasets large, locally stored. instead downloaded via API unique DOI identifier (just hover data links see actual DOI codes). datasets structured sites, series parameters. series continuing time-series, .e. collection deployments measuring parameter (e.g. Air Temperature, Air Pressure, Chlorophyll) subsite. , given site parameter, might exist multiple subsites therefore series, case likely distinguishable depth. Sea Water Temperature Loggers dataset, series synonymous variable called subsite. Weather Station dataset, combination subsite parameter. vignette gives overview one go discovering overall information contained datasets. dataset-specific vignettes, see vignette pages.","code":""},{"path":"https://docs.ropensci.org/dataaimsr/articles/navigating.html","id":"discover-a-dataset","dir":"Articles","previous_headings":"","what":"Discover a dataset","title":"Navigating dataaimsr","text":"AIMS Data Platform API points full metadata dataset. currently working ways facilitate visualisation datasets multiple features directly R package. moment though possible visualise summary information Sea Water Temperature Loggers dataset. similar feature Weather Station dataset implemented near future (likely early 2021)—now, please refer online metadata discover () can download data.","code":""},{"path":"https://docs.ropensci.org/dataaimsr/articles/navigating.html","id":"data-summary","dir":"Articles","previous_headings":"Discover a dataset","what":"Data summary","title":"Navigating dataaimsr","text":"first step visualise dataset. Let’s mapping available sites Sea Water Temperature Loggers dataset using main function called aims_data: summary argument key. either \"summary--series\" \"summary--deployment\" user wants overview available data. , currently implemented Sea Water Temperature Loggers dataset . output aims_data data.frame class aimsdf. Notice sdata contains lot information, related site / series / parameter ID. row corresponds unique series, certain site may contain multiple series; cases, series generally differ one another depth. columns time_coverage_start time_coverage_end probably one valuable pieces information. provide user window data collection particular series, probably crucial decide whether particular series relevance specific question hand. Also note three columns containing total number observations series: uncal_obs, cal_obs qc_obs, respectively stand uncalibrated, calibrated, quality-controlled observations. Calibrated quality-controlled generally . Instruments routinely calibrated (mostly year) temperature-controlled water bath corrections applied data. calibration, data records quality controlled based following tests: 1) clip -water data, using deployment’s metadata, 2) impossible value check: data outside fixed temperature range (14˚C – 40˚C) flagged bad data, 3) spike test: individual extreme values flagged probably bad 4) Excessive gradient test: pairs data present sudden change slope flagged probably bad. data record fails least one tests, QC flag equal 2 returned, otherwise, QC flag set 1. aimsdf objects can plotted using plot function. summary--... data sdata, plot always generate map points around Australia associated regions, coloured number calibrated observations:","code":"sdata <- aims_data(target = \"temp_loggers\", api_key = my_api_key,                    summary = \"summary-by-series\") head(sdata) #>   site_id                    site subsite_id    subsite series_id     series         parameter #> 1       1 Agincourt Reef Number 3       2687     AG3FL1      2687     AG3FL1 Water Temperature #> 2       1 Agincourt Reef Number 3      14276  AG3SL1old     14276  AG3SL1old Water Temperature #> 3       3           Cleveland Bay       3007 CLEVAWSSL1      3007 CLEVAWSSL1 Water Temperature #> 4       3           Cleveland Bay       3069 CLEVAWSFL1      3069 CLEVAWSFL1 Water Temperature #> 5       4             Davies Reef       2629     DAVFL1      2629     DAVFL1 Water Temperature #> 6       4             Davies Reef       2630     DAVSL1      2630     DAVSL1 Water Temperature #>   parameter_id time_coverage_start time_coverage_end      lat      lon depth uncal_obs cal_obs #> 1            1          1996-03-30        2008-12-11 -15.9903 145.8212     0     23130  110480 #> 2            1          1996-03-30        2011-07-21 -15.9905 145.8213     5    114450  216794 #> 3            1          2004-05-13        2008-05-03 -19.1557 146.8813     7     11951   53231 #> 4            1          2005-09-15        2005-12-22 -19.1557 146.8813     1         0    4656 #> 5            1          1997-08-26        2019-06-10 -18.8065 147.6688     1    437544  566585 #> 6            1          1996-05-02        2022-03-05 -18.8060 147.6686     8    512106  638452 #>   qc_obs #> 1 110480 #> 2 216794 #> 3  53231 #> 4   4656 #> 5 566585 #> 6 638397 plot(sdata, ptype = \"map\")"},{"path":"https://docs.ropensci.org/dataaimsr/articles/navigating.html","id":"filter-values","dir":"Articles","previous_headings":"Discover a dataset","what":"Filter values","title":"Navigating dataaimsr","text":"case Weather Station dataset, knowing sites bit tricky. However, currently convenience function called aims_filter_values allows one query sites, series parameters available datasets: downside one know time window available one , nested (.e. series / parameter / site). way though series name generally gives information anyway (see code output ). knowing available observation window absolutely crucial, mentioned user refer online metadata.","code":"head(aims_filter_values(\"weather\", filter_name = \"series\")) #>   series_id                                                                 series #> 1    104918        Myrmidon Reef Weather Station Wind Speed (scalar avg b 10 min)  #> 2      3509               Lizard Island Relay Pole 2 Maximum Wind Speed 30 Minutes #> 3    100686                            Saibai Island Weather Station Hail Duration #> 4       266 Orpheus Island Relay Pole 3 Wind Direction (Vector Average 30 Minutes) #> 5      2639 Hardy Reef Weather Station Wind Direction (Vector Standard 10 Minutes) #> 6     10243                           Raine Island Weather Station Air Temperature"},{"path":"https://docs.ropensci.org/dataaimsr/articles/navigating.html","id":"download-slices-of-datasets","dir":"Articles","previous_headings":"","what":"Download slices of datasets","title":"Navigating dataaimsr","text":"Now know explore datasets data , finish vignette showing example one go downloading actual monitoring data. say slices datasets AIMS monitoring datasets high temporal resolution one tries download entire thing might take hours. Generally download slices data time, need filters (see ). hand, interested aggregated values (daily means), can set summary = \"daily\" aims_data combination list filters download concise datasets. far, aggregated data available Sea Water Temperature Loggers dataset.","code":""},{"path":"https://docs.ropensci.org/dataaimsr/articles/navigating.html","id":"data-filters","dir":"Articles","previous_headings":"Download slices of datasets","what":"Data filters","title":"Navigating dataaimsr","text":"Filters last important information user needs know master navigation download AIMS monitoring datasets. dataset can filtered attributes can exposed function aims_expose_attributes: help file (see ?aims_expose_attributes) contains details filter targets. , understanding summaries filters available provide user great head start. Downloading raw, high-resolution data achieved using aims_data function, however now ignore summary argument, instead implement filters. example, let’s say want download data collected Yongala specific time window: returned aimsdf object case attributes give us summary crucial information: metadata doi link containing metadata record data series citation citation information particular dataset parameters output data.frame can directly extracted using convenience functions aims_metadata, aims_citation aims_parameters, e.g.: example data contains multiple parameters available site specified time, actual measurements either raw quality-controlled. monitoring data (aggregated non-aggregated, .e. summary = NA summary = \"daily\" aims_data call), can either visualise data time series broken parameter, map showing sites summary info. parameters specified, dataaimsr plot maximum 4 parameters chosen random time series plot. Alternatively user can specify parameters plotted.  can also refine even including time window download data: simply download plot daily aggregated data:","code":"aims_expose_attributes(\"weather\") #> $summary #> [1] NA #>  #> $filters #>  [1] \"site\"      \"subsite\"   \"series\"    \"series_id\" \"parameter\" \"size\"      \"min_lat\"   \"max_lat\"   #>  [9] \"min_lon\"   \"max_lon\"   \"from_date\" \"thru_date\" \"version\"   \"cursor\" aims_expose_attributes(\"temp_loggers\") #> $summary #> [1] \"summary-by-series\"     \"summary-by-deployment\" \"daily\"                 #>  #> $filters #>  [1] \"site\"      \"subsite\"   \"series\"    \"series_id\" \"parameter\" \"size\"      \"min_lat\"   \"max_lat\"   #>  [9] \"min_lon\"   \"max_lon\"   \"from_date\" \"thru_date\" \"version\"   \"cursor\" wdata_a <- aims_data(\"weather\", api_key = my_api_key,                      filters = list(site = \"Yongala\",                                     from_date = \"2018-01-01\",                                     thru_date = \"2018-01-02\")) aims_metadata(wdata_a) #> [1] \"Metadata record https://doi.org/10.25845/5c09bf93f315d\" # check parameters with aims_parameters(wdata_a) plot(wdata_a, ptype = \"time_series\",      pars = c(\"Water Pressure\", \"Chlorophyll\")) wdata_b <- aims_data(\"weather\",                      api_key = my_api_key,                      filters = list(series_id = 64,                                     from_date = \"1991-10-18T06:00:00\",                                     thru_date = \"1991-10-18T12:00:00\")) range(wdata_b$time) #> [1] \"1991-10-18 06:00:00 UTC\" \"1991-10-18 12:00:00 UTC\" sdata_c <- aims_data(\"temp_loggers\", api_key = my_api_key, summary = \"daily\",                      filters = list(series = \"DAVFL1\",                                     from_date = \"2018-01-01\",                                     thru_date = \"2018-12-31\")) plot(sdata_c, ptype = \"time_series\", pars = c(\"Water Temperature\"))"},{"path":"https://docs.ropensci.org/dataaimsr/articles/navigating.html","id":"more-info","dir":"Articles","previous_headings":"","what":"More info","title":"Navigating dataaimsr","text":"See vignette pages dataset-specific explorations.","code":""},{"path":"https://docs.ropensci.org/dataaimsr/articles/tloggers.html","id":"discovering-the-dataset","dir":"Articles","previous_headings":"","what":"Discovering the dataset","title":"Sea Water Temperature Loggers time series dataset","text":"Sea Water Temperature Loggers dataset less extensive AIMS Weather Station dataset comprises one single “parameter”—water temperature—measured multiple sites. sites temporal coverage; loggers still actively collecting data, others discontinued. key distinctive variables instance “site”, “series”. “series” represents continuing time-series, .e. collection deployments measuring parameter subsite. one parameter (water temperature), subsite series synonymous Sea Water Temperature Loggers dataset. series comprise continuing time-series specific site depth. Essentially, user limited knowledge data , consisted, need prior exploration learn can downloaded. Suppose goal download time-series particular site. general procedure : Examine documentation establish query filters Perform data download using aims_data Create exploratory time-series chart datasets, list available filters can retrieved function aims_expose_attributes. Knowing filters important time series quite extensive, parameters measured high frequency (e.g. every 5 minutes), downloading dataset entire year take quite time (’s possible though true goal user). Otherwise, Sea Water Temperature Loggers dataset can downloaded daily average aggregations, can reduce size download many fold. Sea Water Temperature Loggers dataset, demonstrated intro vignette, convenience summary argument facilitates learning data available. can download summary information sites using main function called aims_data: summary set either summary--series summary--deployment user wants overview available data. Notice sdata contains lot information, related site / series / parameter ID. row corresponds unique series. columns time_coverage_start time_coverage_end probably one valuable pieces information. provide user window data collection particular series, probably crucial decide whether particular series relevance specific question hand. benefits choosing data series (numeric equivalent, series_id) comes one location parameter type (water temperature), making data easy plot. choose data series Sea Water Temperature Loggers dataset, specify additional arguments ensure data downloaded expected. values filters might look like following:","code":"aims_expose_attributes(\"temp_loggers\") #> $summary #> [1] \"summary-by-series\"     \"summary-by-deployment\" \"daily\"                 #>  #> $filters #>  [1] \"site\"      \"subsite\"   \"series\"    \"series_id\" \"parameter\" \"size\"      \"min_lat\"   \"max_lat\"   #>  [9] \"min_lon\"   \"max_lon\"   \"from_date\" \"thru_date\" \"version\"   \"cursor\" sdata <- aims_data(\"temp_loggers\", api_key = my_api_key,                    summary = \"summary-by-series\") head(sdata) #>   site_id                    site subsite_id    subsite series_id     series         parameter #> 1       1 Agincourt Reef Number 3       2687     AG3FL1      2687     AG3FL1 Water Temperature #> 2       1 Agincourt Reef Number 3      14276  AG3SL1old     14276  AG3SL1old Water Temperature #> 3       3           Cleveland Bay       3007 CLEVAWSSL1      3007 CLEVAWSSL1 Water Temperature #> 4       3           Cleveland Bay       3069 CLEVAWSFL1      3069 CLEVAWSFL1 Water Temperature #> 5       4             Davies Reef       2629     DAVFL1      2629     DAVFL1 Water Temperature #> 6       4             Davies Reef       2630     DAVSL1      2630     DAVSL1 Water Temperature #>   parameter_id time_coverage_start time_coverage_end      lat      lon depth uncal_obs cal_obs #> 1            1          1996-03-30        2008-12-11 -15.9903 145.8212     0     23130  110480 #> 2            1          1996-03-30        2011-07-21 -15.9905 145.8213     5    114450  216794 #> 3            1          2004-05-13        2008-05-03 -19.1557 146.8813     7     11951   53231 #> 4            1          2005-09-15        2005-12-22 -19.1557 146.8813     1         0    4656 #> 5            1          1997-08-26        2019-06-10 -18.8065 147.6688     1    437544  566585 #> 6            1          1996-05-02        2022-03-05 -18.8060 147.6686     8    512106  638452 #>   qc_obs #> 1 110480 #> 2 216794 #> 3  53231 #> 4   4656 #> 5 566585 #> 6 638397 ddata <- aims_data(\"temp_loggers\", api_key = my_api_key,                    summary = \"summary-by-deployment\") head(ddata) #>   deployment_id serial_num site_id          site subsite_id subsite series_id  series #> 1         39691   SU-11424       4   Davies Reef       2630  DAVSL1      2630  DAVSL1 #> 2        494247     203112     923  Geoffrey Bay      14475 GBMMPFL     14475 GBMMPFL #> 3          3319 SST-905242     865 Hayman Island       2644  HAYSL1      2644  HAYSL1 #> 4        471410   10048402    3181    Enderby Is      14056 ENDERBY     14056 ENDERBY #> 5         15923   SU-10088     986   Pine Island       3080 PINESL1      3080 PINESL1 #> 6        479464     355088     896    Turner Cay       2664  TURSL1      2664  TURSL1 #>           parameter parameter_id time_coverage_start time_coverage_end      lat      lon depth #> 1 Water Temperature            1          2012-11-10        2013-05-21 -18.8060 147.6686   8.3 #> 2 Water Temperature            1          2020-04-06        2021-02-22 -19.1548 146.8685   2.0 #> 3 Water Temperature            1          1999-06-03        2000-05-15 -20.0572 148.8997   9.0 #> 4 Water Temperature            1          2015-05-24        2016-02-06 -20.5689 116.5550    NA #> 5 Water Temperature            1          2011-09-28        2012-02-13 -20.3780 148.8884   6.6 #> 6 Water Temperature            1          2014-08-27        2017-01-25 -21.7031 152.5605    NA #>   uncal_obs cal_obs qc_obs #> 1     27504   27504  27504 #> 2     92448   92448  92448 #> 3         0   16590  16590 #> 4     12292   12292  12292 #> 5     19728   19728  19728 #> 6    125856  125856 125856"},{"path":"https://docs.ropensci.org/dataaimsr/articles/tloggers.html","id":"query-and-plot-dataset","dir":"Articles","previous_headings":"","what":"Query and Plot Dataset","title":"Sea Water Temperature Loggers time series dataset","text":"deciding query parameters, plug series id aims_data function: can check query filters worked: can visualise Australia data placed:  can also visually compare multiple series . instance, let’s compare air temperature data Davies Reef Bramble Cay period time:  One also download data particular time day throughout year, e.g. Davies Reef 1 m depth (series_id 2629):  simply plot daily aggregated averages:","code":"agincourt <- aims_data(\"temp_loggers\", api_key = my_api_key,                        filters = list(series_id = 2687,                                       from_date = \"2005-01-01\",                                       thru_date = \"2005-01-10\")) range(agincourt$time) #> [1] \"2005-01-01 UTC\" \"2005-01-10 UTC\" plot(agincourt, ptype = \"map\") target_series <- c(\"Agincourt\" = 2687, \"Cleveland Bay\" = 3007) aims_data_per_series <- function(series_number, my_api_key, ...) {   aims_data(\"temp_loggers\", api_key = my_api_key,             filters = list(series_id = series_number, ...)) } results <- purrr::map(target_series, aims_data_per_series,                       my_api_key = my_api_key,                       from_date = \"2005-01-01\",                       thru_date = \"2005-01-10\") sst_data <- purrr::map_dfr(results, rbind) plot(sst_data, ptype = \"time_series\") days <- seq(as.Date(\"2005-01-01\"), as.Date(\"2005-12-31\"), by = \"month\") out <- numeric(length = length(days)) for (i in seq_along(days)) {   hour_in <- paste0(days[i], \"T06:00:00\")   hour_out <- paste0(days[i], \"T12:00:00\")   df <- aims_data(\"temp_loggers\", api_key = my_api_key,                   filters = list(series_id = 2629, from_date = hour_in,                                  thru_date = hour_out))   out[i] <- mean(df$qc_val) }  ggplot(data = data.frame(date = days, temps = out)) +   geom_line(mapping = aes(x = date, y = temps)) +   labs(x = \"Date\",        y = \"Water temperature (˚C)\",        title = \"Davies Reef @ 1 m (2005)\",        subtitle = \"mean 6 A.M. – 12 P.M.\") +   theme_bw() +   theme(axis.title.x = element_text(size = 12),         axis.title.y = element_text(size = 12),         legend.position = \"bottom\") df <- aims_data(\"temp_loggers\", api_key = my_api_key, summary = \"daily\",                 filters = list(series_id = 2629, from_date = \"2005-01-01\",                                thru_date = \"2005-12-31\")) plot(df, ptype = \"time_series\", pars = c(\"Water Temperature\"))"},{"path":"https://docs.ropensci.org/dataaimsr/articles/tloggers.html","id":"bibliography","dir":"Articles","previous_headings":"","what":"Bibliography","title":"Sea Water Temperature Loggers time series dataset","text":"","code":"purrr::map_chr(results, aims_citation) %>%   unlist %>%   unname #> [1] \"Australian Institute of Marine Science (AIMS). 2017, AIMS Sea Temperature Observing System (AIMS Temperature Logger Program), Time period:2005-01-01 to 2005-01-10. https://doi.org/10.25845/5b4eb0f9bb848, accessed 06 Jul 2022.\" #> [2] \"Australian Institute of Marine Science (AIMS). 2017, AIMS Sea Temperature Observing System (AIMS Temperature Logger Program), Time period:2005-01-01 to 2005-01-10. https://doi.org/10.25845/5b4eb0f9bb848, accessed 06 Jul 2022.\""},{"path":"https://docs.ropensci.org/dataaimsr/articles/weather.html","id":"discover-a-dataset","dir":"Articles","previous_headings":"","what":"Discover a dataset","title":"AIMS Weather Station time series datasets","text":"AIMS Weather Station dataset consists series “parameters” measured multiple sites. , instance, minimum wind speed, peak wave period, wind direction, water pressure, dissolved oxygen, chlorophyll concentration, etc. parameters measured sites times. loggers still actively collecting data, others discontinued. Essentially, user limited knowledge data , consisted, need prior exploration learn can downloaded. Suppose goal download time-series particular site. general procedure : Examine documentation establish query filters Perform data download using aims_data Use R package ggplot2 create exploratory time-series chart datasets, list available filters can retrieved function aims_expose_attributes. Knowing filters important time series quite extensive, parameters measured high frequency (e.g. every 5 minutes), downloading dataset entire year take quite time (’s possible though true goal user). Sea Water Temperature Loggers dataset, demonstrated intro vignette, convenience summary method facilitates learning data available, downloading daily aggregated average data. back-end currently developed AIMS Weather Station well. meantime, explore AIMS Weather Station dataset, use function aims_filter_values. function takes target dataset given filter, returns available information regarding filter. recommend exploring series filter—series continuing time-series, .e. collection deployments measuring parameter (e.g. air temperature, air pressure, chlorophyll) subsite. , given site parameter, might exist multiple subsites therefore series, case likely distinguishable depth. benefits choosing data series comes one location parameter type, making data easy plot. choose data series AIMS Weather Station dataset, specify additional arguments ensure data downloaded expected. values filters might look like following:","code":"aims_expose_attributes(\"weather\") #> $summary #> [1] NA #>  #> $filters #>  [1] \"site\"      \"subsite\"   \"series\"    \"series_id\" \"parameter\" \"size\"      \"min_lat\"   \"max_lat\"   #>  [9] \"min_lon\"   \"max_lon\"   \"from_date\" \"thru_date\" \"version\"   \"cursor\" head(aims_filter_values(\"weather\", filter_name = \"series\")) #>   series_id                                                                 series #> 1    104918        Myrmidon Reef Weather Station Wind Speed (scalar avg b 10 min)  #> 2      3509               Lizard Island Relay Pole 2 Maximum Wind Speed 30 Minutes #> 3    100686                            Saibai Island Weather Station Hail Duration #> 4       266 Orpheus Island Relay Pole 3 Wind Direction (Vector Average 30 Minutes) #> 5      2639 Hardy Reef Weather Station Wind Direction (Vector Standard 10 Minutes) #> 6     10243                           Raine Island Weather Station Air Temperature"},{"path":"https://docs.ropensci.org/dataaimsr/articles/weather.html","id":"query-and-plot-dataset","dir":"Articles","previous_headings":"","what":"Query and Plot Dataset","title":"AIMS Weather Station time series datasets","text":"deciding query parameters, plug series id aims_data function: can even visually compare multiple series . instance, let’s compare air temperature data Davies Reef Bramble Cay period time:  One also download data particular time day throughout year, e.g. Heron Island Relay Pole 8 5.4 m depth (series 10394):","code":"davies <- aims_data(\"weather\", api_key = my_api_key,                     filters = list(series_id = 64,                                    from_date = \"2018-01-01\",                                    thru_date = \"2018-01-10\")) target_series <- c(\"Davies Reef\" = 64, \"Bramble Cay\" = 87929) aims_data_per_series <- function(series_number, my_api_key, ...) {   aims_data(\"weather\", api_key = my_api_key,             filters = list(series_id = series_number, ...)) } results <- purrr::map(target_series, aims_data_per_series,                       my_api_key = my_api_key,                       from_date = \"2018-01-01\",                       thru_date = \"2018-01-10\") weather_data <- purrr::map_dfr(results, rbind) plot(weather_data, ptype = \"time_series\") days <- seq(as.Date(\"2018-01-01\"), as.Date(\"2018-12-31\"), by = \"month\") out <- numeric(length = length(days)) for (i in seq_along(days)) {   hour_in <- paste0(days[i], \"T06:00:00\")   hour_out <- paste0(days[i], \"T12:00:00\")   df <- aims_data(\"weather\",                   api_key = my_api_key,                   filters = list(series_id = 10394,                                  from_date = hour_in,                                  thru_date = hour_out))   out[i] <- mean(df$qc_val) } ggplot(data = data.frame(date = days, temps = out)) +   geom_line(mapping = aes(x = date, y = temps)) +   labs(x = \"Date\",        y = \"Air temperature (˚C)\",        title = \"Heron Island (2018)\",        subtitle = \"mean 6 A.M. – 12 P.M.\") +   theme_bw() +   theme(axis.title.x = element_text(size = 12),         axis.title.y = element_text(size = 12),         legend.position = \"bottom\")"},{"path":"https://docs.ropensci.org/dataaimsr/articles/weather.html","id":"bibliography","dir":"Articles","previous_headings":"","what":"Bibliography","title":"AIMS Weather Station time series datasets","text":"","code":"purrr::map_chr(results, aims_citation) %>%   unlist %>%   unname #> [1] \"Australian Institute of Marine Science (AIMS). 2009, Australian Institute of Marine Science Automatic Weather Stations, https://doi.org/10.25845/5c09bf93f315d, accessed 6 July 2022.  Time period: 2018-01-01 to 2018-01-10.  Series: Davies Reef Weather Station Air Temperature\" #> [2] \"Australian Institute of Marine Science (AIMS). 2009, Australian Institute of Marine Science Automatic Weather Stations, https://doi.org/10.25845/5c09bf93f315d, accessed 6 July 2022.  Time period: 2018-01-01 to 2018-01-10.  Series: Bramble Cay Weather Station Air Temperature\""},{"path":"https://docs.ropensci.org/dataaimsr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Diego R. Barneche. Author, maintainer. AIMS Datacentre. Author. Greg Coleman. Author. Duncan Fermor. Author. Eduardo Klein. Author. Tobias Robinson. Author. Jason Smith. Author. Jeffrey L. Sheehan. Author. Shannon Dowley. Author. Dean Ditton. Author. Kevin Gunn. Author. Gavin Ericson. Author. Murray Logan. Author. Mark Rehbein. Author. Sam Albers. Reviewer. Elizabeth Stark. Reviewer. Laura DeCicco. Reviewer.","code":""},{"path":"https://docs.ropensci.org/dataaimsr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Barneche DR, Coleman G, Fermor D, Klein E, Robinson T, Smith J, Sheehan JL, Dowley S, Ditton D, Gunn K, Ericson G, Logan M, Rehbein M (2021) dataaimsr: R Client Australian Institute Marine Science Data Platform API provides easy access AIMS Data Platform. Journal Open Source Software, 6(62): 3282.","code":"@Article{,   author = {Diego R. Barneche and Greg Coleman and Duncan Fermor and Eduardo Klein and Tobias Robinson and Jason Smith and Jeffrey L. Sheehan and Shannon Dowley and Dean Ditton and Kevin Gunn and Gavin Ericson and Murray Logan and Mark Rehbein},   title = {dataaimsr: An R Client for the Australian Institute of Marine Science Data Platform API which provides easy access to AIMS Data Platform},   journal = {Journal of Open Source Software},   volume = {6},   issue = {62},   year = {2021},   pages = {3282},   url = {https://joss.theoj.org/papers/10.21105/joss.03282},   doi = {10.21105/joss.03282}, }"},{"path":"https://docs.ropensci.org/dataaimsr/index.html","id":"dataaimsr-","dir":"","previous_headings":"","what":"AIMS Data Platform API Client","title":"AIMS Data Platform API Client","text":"Barneche DR, Coleman G, Fermor D, Klein E, Robinson T, Smith J, Sheehan JL, Dowley S, Ditton D, Gunn K, Ericson G, Logan M, Rehbein M (2021). dataaimsr: R Client Australian Institute Marine Science Data Platform API provides easy access AIMS Data Platform. Journal Open Source Software, 6: 3282. doi: 10.21105/joss.03282.","code":""},{"path":"https://docs.ropensci.org/dataaimsr/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"AIMS Data Platform API Client","text":"Australian Institute Marine Science (AIMS) long tradition measuring monitoring series environmental parameters along tropical coast Australia. parameters include long-term record sea surface temperature, wind characteristics, atmospheric temperature, pressure, chlorophyll-data, among many others. AIMS Data Centre team recently developed AIMS Data Platform API REST API providing JSON-formatted data users. dataaimsr R package written allow users communicate AIMS Data Platform API using API key convenience functions interrogate understand datasets available download. , allows user fully explore datasets R whichever capacity want (e.g. data visualisation, statistical analyses, etc). package contains plot method allows user plot summaries different types dataset made available API. provide brief context existing Datasets can explored dataaimsr.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/dataaimsr/index.html","id":"requesting-an-aims-data-platform-api-key","dir":"","previous_headings":"Installation","what":"Requesting an AIMS Data Platform API Key","title":"AIMS Data Platform API Client","text":"AIMS Data Platform requires API Key data requests, get key . API Key can passed package functions additional api_key = \"XXXX\" argument. However, strongly encourage users maintain API key private locally hidden environment variable (AIMS_DATAPLATFORM_API_KEY) .Renviron file automatic loading start R session. Please read article details keeping API private extremely important. Users can modify .Renviron file adding following line: .Renviron file usually stored users home directory:","code":"AIMS_DATAPLATFORM_API_KEY=XXXXXXXXXXXXX"},{"path":[]},{"path":"https://docs.ropensci.org/dataaimsr/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"AIMS Data Platform API Client","text":"comprehensive examples navigate dataaimsr interrogate datasets can found online vignettes.","code":"# assumes that user already has API key saved to # .Renviron library(dataaimsr)  # summarised by series # for all sites that contain data # within a defined date range sdf_b <- aims_data(\"temp_loggers\", api_key = NULL,                    summary = \"summary-by-series\",                    filters = list(\"from_date\" = \"2018-01-01\",                                   \"thru_date\" = \"2018-12-31\"))  # downloads weather data from site Yongala # within a defined date range wdf_a <- aims_data(\"weather\", api_key = NULL,                    filters = list(site = \"Yongala\",                                   from_date = \"2018-01-01\",                                   thru_date = \"2018-01-02\"))"},{"path":"https://docs.ropensci.org/dataaimsr/index.html","id":"datasets","dir":"","previous_headings":"","what":"Datasets","title":"AIMS Data Platform API Client","text":"Currently, two AIMS long-term monitoring datasets available downloaded dataaimsr:","code":""},{"path":"https://docs.ropensci.org/dataaimsr/index.html","id":"northern-australia-automated-marine-weather-and-oceanographic-stations","dir":"","previous_headings":"Datasets","what":"Northern Australia Automated Marine Weather And Oceanographic Stations","title":"AIMS Data Platform API Client","text":"Automatic weather stations deployed AIMS since 1980. stations along Great Barrier Reef (GBR) including Torres Strait North-Eastern Australia also station Darwin one Ningaloo Reef Western Australia. Many stations located reef either poles located reef lagoon tourist pontoons structures. list weather stations deployed AIMS period time data may available can found metadata webpage. NB: Records may continuous time spans given.","code":""},{"path":"https://docs.ropensci.org/dataaimsr/index.html","id":"aims-sea-water-temperature-observing-system-aims-temperature-logger-program","dir":"","previous_headings":"Datasets","what":"AIMS Sea Water Temperature Observing System (AIMS Temperature Logger Program)","title":"AIMS Data Platform API Client","text":"data provided number sea water temperature monitoring programs conducted tropical subtropical coral reefs environments around Australia. Data available approximately 80 GBR sites, 16 Coral Sea sites, 7 sites North West Western Australia (WA), 8 Queensland regional ports, 13 sites Solitary Islands, 4 sites Papua New Guinea 10 sites Cocos (Keeling) Islands. Data obtained -situ data loggers deployed reef. Temperature instruments sample water temperatures every 5-10 minutes (typically) exchanged downloaded approximately every 12 months. Temperature loggers reef-flat generally placed just Lowest Astronomical Tide level. Reef-slope (specified Upper reef-slope) generally refers depths 5–9 m Deep reef-slope refers depths ~20 m. information dataset usage, please visit metadata webpage.","code":""},{"path":"https://docs.ropensci.org/dataaimsr/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"AIMS Data Platform API Client","text":"dataaimsr provided Australian Institute Marine Science MIT License (MIT).","code":""},{"path":"https://docs.ropensci.org/dataaimsr/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"AIMS Data Platform API Client","text":"Please note package released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://docs.ropensci.org/dataaimsr/index.html","id":"aims-r-package-logos","dir":"","previous_headings":"","what":"AIMS R package logos","title":"AIMS Data Platform API Client","text":"R package logos use watercolour map Australia, obtained ggmap R package, downloads original map tiles provided Stamen Design, CC 3.0, data OpenStreetMap, CC SA.","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/aims_citation.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts citation attribute from object of class aimsdf — aims_citation","title":"Extracts citation attribute from object of class aimsdf — aims_citation","text":"Extracts citation attribute object class aimsdf","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/aims_citation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts citation attribute from object of class aimsdf — aims_citation","text":"","code":"aims_citation(df_)"},{"path":"https://docs.ropensci.org/dataaimsr/reference/aims_citation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts citation attribute from object of class aimsdf — aims_citation","text":"df_ data.frame class aimsdf created function aims_data","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/aims_citation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracts citation attribute from object of class aimsdf — aims_citation","text":"character vector.","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/aims_citation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extracts citation attribute from object of class aimsdf — aims_citation","text":"function retrieves citation attribute aimsdf object. input aimsdf object summary data.frame (see ?aims_data), output empty string.","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/aims_citation.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extracts citation attribute from object of class aimsdf — aims_citation","text":"AIMS Datacentre adc@aims.gov.au","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/aims_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Request data via the AIMS Data Platform API — aims_data","title":"Request data via the AIMS Data Platform API — aims_data","text":"function communicates AIMS Data Platform via AIMS Data Platform API","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/aims_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Request data via the AIMS Data Platform API — aims_data","text":"","code":"aims_data(target, filters = NULL, summary = NA, ...)"},{"path":"https://docs.ropensci.org/dataaimsr/reference/aims_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Request data via the AIMS Data Platform API — aims_data","text":"target character vector length 1 specifying dataset. weather temp_loggers currently allowed. filters list containing set filters data query (see Details). summary summary tables (\"summary--series\" \"summary--deployment\") daily aggregated data (\"daily\") returned instead full data (see Details)? ... Currently unused. Additional arguments passed non-exported internal functions.","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/aims_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Request data via the AIMS Data Platform API — aims_data","text":"aims_data returns data.frame class aimsdf. summary %% c(\"summary--series\", \"summary--deployment\"), output shows summary information target dataset (.e. weather temperature loggers) (NB: currently, summary works temperature logger database). summary passed additional argument, output contains raw monitoring data. summary = \"daily\", output contains mean daily aggregated monitoring data. output also contains five attributes (empty strings summary passed additional argument): metadataa DOI link containing metadata record data series. citationthe citation information particular dataset. parametersThe measured parameters comprised output. typeThe type dataset. Either \"monitoring\" summary specified, \"monitoring (daily aggregation)\" summary = \"daily\", \"summary--\" otherwise. targetThe input target.","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/aims_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Request data via the AIMS Data Platform API — aims_data","text":"AIMS Data Platform R Client provides easy access data sets R applications AIMS Data Platform API. AIMS Data Platform requires API Key requests, can obtained link. preferred API Keys stored code. recommend storing environment variable AIMS_DATAPLATFORM_API_KEY permanently user's .Renviron file order load API Key automatically. two types data currently available AIMS Data Platform API: Weather Sea Water Temperature Loggers. searched internally via unique DOI identifiers. one data type time can passed argument target. list arguments filters can exposed Weather Sea Water Temperature Loggers using function aims_expose_attributes. Note present user can inspect range dates temperature loggers data (see usage argument summary examples ). , argument summary must either string \"summary--series\" \"summary--deployment\". cases, time filters ignored. Details available dates dataset time series can accessed via Metadata AIMS Data Platform API. raise caveat time boundaries important; data collected small time intervals, window just days can yield large datasets. query return error reaches system's memory capacity. reason, version 1.1.0 onwards, offering possibility downloading mean daily aggregated version. , user must set summary = \"daily\". particular case, query filter taken account.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/dataaimsr/reference/aims_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Request data via the AIMS Data Platform API — aims_data","text":"AIMS Datacentre adc@aims.gov.au","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/aims_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Request data via the AIMS Data Platform API — aims_data","text":"","code":"if (FALSE) { library(dataaimsr) # assumes that user already has API key saved to # .Renviron  # start downloads: # 1. downloads weather data from # site Yongala # within a defined date range wdf_a <- aims_data(\"weather\", api_key = NULL,                    filters = list(site = \"Yongala\",                                   from_date = \"2018-01-01\",                                   thru_date = \"2018-01-02\"))  # 2. downloads weather data from all sites # under series_id 64 from Davies Reef # within a defined date range wdf_b <- aims_data(\"weather\", api_key = NULL,                    filters = list(series_id = 64,                                   from_date = \"1991-10-18\",                                   thru_date = \"1991-10-19\")) head(wdf_b) range(wdf_b$time)  # 3. downloads weather data from all sites # under series_id 64 from Davies Reef # within defined date AND time range wdf_c <- aims_data(\"weather\", api_key = NULL,                    filters = list(series_id = 64,                                   from_date = \"1991-10-18T06:00:00\",                                   thru_date = \"1991-10-18T12:00:00\")) head(wdf_c) range(wdf_c$time)  # 4. downloads all parameters from all sites # within a defined date range wdf_d <- aims_data(\"weather\", api_key = NULL,                    filters = list(from_date = \"2003-01-01\",                                   thru_date = \"2003-01-02\")) # note that there are multiple sites and series # so in this case, because we did not specify a specific # parameter, series within sites could differ by both # parameter and depth head(wdf_d) unique(wdf_d[, c(\"site\", \"series_id\", \"series\")]) unique(wdf_d$parameter) range(wdf_d$time)  # 5. downloads chlorophyll from all sites # within a defined date range wdf_e <- aims_data(\"weather\", api_key = NULL,                    filters = list(parameter = \"Chlorophyll\",                                   from_date = \"2018-01-01\",                                   thru_date = \"2018-01-02\")) # note again that there are multiple sites and series # however in this case because we did specify a specific # parameter, series within sites differ by depth only head(wdf_e) unique(wdf_e[, c(\"site\", \"series_id\", \"series\", \"depth\")]) unique(wdf_e$parameter) range(wdf_e$time)  # 6. downloads temperature data # summarised by series sdf_a <- aims_data(\"temp_loggers\", api_key = NULL,                    summary = \"summary-by-series\") head(sdf_a) dim(sdf_a)  # 7. downloads temperature data # summarised by series # for all sites that contain data # within a defined date range sdf_b <- aims_data(\"temp_loggers\", api_key = NULL,                    summary = \"summary-by-series\",                    filters = list(\"from_date\" = \"2018-01-01\",                                   \"thru_date\" = \"2018-12-31\")) head(sdf_b) dim(sdf_b) # a subset of sdf_a  # 8. downloads temperature data # summarised by deployment sdf_c <- aims_data(\"temp_loggers\", api_key = NULL,                    summary = \"summary-by-deployment\") head(sdf_c) dim(sdf_c)  # 9. downloads temperature data # within a defined date range, averaged by day sdf_d <- aims_data(\"temp_loggers\", api_key = NULL, summary = \"daily\",                    filters = list(series = \"DAVFL1\",                                   from_date = \"2018-01-01\",                                   thru_date = \"2018-01-10\")) # note again that there are multiple sites and series # however in this case because we did specify a specific # parameter, series within sites differ by depth only head(sdf_d) unique(sdf_d[, c(\"site\", \"series_id\", \"series\", \"depth\")]) unique(sdf_d$parameter) range(sdf_d$time) }"},{"path":"https://docs.ropensci.org/dataaimsr/reference/aims_expose_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Expose available query filters — aims_expose_attributes","title":"Expose available query filters — aims_expose_attributes","text":"Expose available query filters allowed parsed either via argument summary filters aims_data","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/aims_expose_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expose available query filters — aims_expose_attributes","text":"","code":"aims_expose_attributes(target)"},{"path":"https://docs.ropensci.org/dataaimsr/reference/aims_expose_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expose available query filters — aims_expose_attributes","text":"target character vector length 1 specifying dataset. weather temp_loggers currently allowed.","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/aims_expose_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expose available query filters — aims_expose_attributes","text":"list two character vectors: one detailing summary modes, another detailing filters.","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/aims_expose_attributes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Expose available query filters — aims_expose_attributes","text":"Use function learn summary modes filters allowed. working implementing summary visualisation methods weather station data. , moment, options available temperature logger data. Three options available: summary--seriesExpose summary available series; series continuing time-series, .e. collection deployments measuring parameter site. temperature loggers, series synonymous sub-site. weather stations, combination sub-site parameter. summary--deploymentExpose summary available deployments. dailyReturn mean daily aggregated monitoring data . offer list valid filter names: siteFilter particular site. subsiteFilter particular subsite. seriesFilter particular series. series_idA unique identifier series - unique within dataset. alternative looking series name. parameterParameter interest. relevant weather station data temperature logger always water temperature. min_latMinimum latitude; used filter lat-lon box. max_latMaximum latitude; used filter lat-lon box. min_lonMinimum longitude; used filter lat-lon box. max_lonMaximum longitude; used filter lat-lon box. from_dateFilter time (string format YYYY-MM-DD). thru_dateFilter time (string format YYYY-MM-DD). additional options actual download, passed additional arguments function, : sizeSet page size large queries (data data--key endpoints). cursorUsed pagination / data\"). versionRequest data recorded particular time (version history).","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/aims_expose_attributes.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Expose available query filters — aims_expose_attributes","text":"AIMS Datacentre adc@aims.gov.au","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/aims_expose_attributes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expose available query filters — aims_expose_attributes","text":"","code":"if (FALSE) { library(dataaimsr) aims_expose_attributes(\"weather\") aims_expose_attributes(\"temp_loggers\") }"},{"path":"https://docs.ropensci.org/dataaimsr/reference/aims_filter_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve vector of existing filter values — aims_filter_values","title":"Retrieve vector of existing filter values — aims_filter_values","text":"utility function allows user query existing possibilities given filter name","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/aims_filter_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve vector of existing filter values — aims_filter_values","text":"","code":"aims_filter_values(target, filter_name)"},{"path":"https://docs.ropensci.org/dataaimsr/reference/aims_filter_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve vector of existing filter values — aims_filter_values","text":"target character vector length 1 specifying dataset. weather temp_loggers currently allowed. filter_name character string containing name filter. Must \"site\", \"subsite\", \"series\", \"parameter\". See details.","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/aims_filter_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve vector of existing filter values — aims_filter_values","text":"Either data.frame filter_name = \"series\", else character vector.","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/aims_filter_values.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve vector of existing filter values — aims_filter_values","text":"full description valid filter_name see ?aims_expose_attributes. temperature logger dataset, \"subsite\" equivalent \"series\"; moreover, note one parameter measured (.e. water temperature), \"parameter\" filter contains one single value.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/dataaimsr/reference/aims_filter_values.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Retrieve vector of existing filter values — aims_filter_values","text":"AIMS Datacentre adc@aims.gov.au","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/aims_filter_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve vector of existing filter values — aims_filter_values","text":"","code":"if (FALSE) { library(dataaimsr) aims_filter_values(\"weather\", filter_name = \"site\") aims_filter_values(\"temp_loggers\", filter_name = \"subsite\") }"},{"path":"https://docs.ropensci.org/dataaimsr/reference/aims_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts metadata attribute from object of class aimsdf — aims_metadata","title":"Extracts metadata attribute from object of class aimsdf — aims_metadata","text":"Extracts metadata attribute object class aimsdf","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/aims_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts metadata attribute from object of class aimsdf — aims_metadata","text":"","code":"aims_metadata(df_)"},{"path":"https://docs.ropensci.org/dataaimsr/reference/aims_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts metadata attribute from object of class aimsdf — aims_metadata","text":"df_ data.frame class aimsdf created function aims_data","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/aims_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracts metadata attribute from object of class aimsdf — aims_metadata","text":"character vector.","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/aims_metadata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extracts metadata attribute from object of class aimsdf — aims_metadata","text":"function retrieves metadata attribute aimsdf object. input aimsdf object summary data.frame (see ?aims_data), output empty string.","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/aims_metadata.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extracts metadata attribute from object of class aimsdf — aims_metadata","text":"AIMS Datacentre adc@aims.gov.au","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/aims_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts parameters attribute from object of class aimsdf — aims_parameters","title":"Extracts parameters attribute from object of class aimsdf — aims_parameters","text":"Extracts parameters attribute object class aimsdf","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/aims_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts parameters attribute from object of class aimsdf — aims_parameters","text":"","code":"aims_parameters(df_)"},{"path":"https://docs.ropensci.org/dataaimsr/reference/aims_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts parameters attribute from object of class aimsdf — aims_parameters","text":"df_ data.frame class aimsdf created function aims_data","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/aims_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracts parameters attribute from object of class aimsdf — aims_parameters","text":"character vector.","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/aims_parameters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extracts parameters attribute from object of class aimsdf — aims_parameters","text":"function retrieves parameters attribute aimsdf object. input aimsdf object summary data.frame (see ?aims_data), output empty string.","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/aims_parameters.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extracts parameters attribute from object of class aimsdf — aims_parameters","text":"AIMS Datacentre adc@aims.gov.au","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/aimsdf-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class aimsdf of data.frame downloaded by the dataaimsr package — aimsdf-class","title":"Class aimsdf of data.frame downloaded by the dataaimsr package — aimsdf-class","text":"Datasets downloaded dataaimsr package inherit aimsdf class, data.frame three attributes.","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/aimsdf-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Class aimsdf of data.frame downloaded by the dataaimsr package — aimsdf-class","text":"See methods(class = \"aimsdf\") overview available methods.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/dataaimsr/reference/capitalise.html","id":null,"dir":"Reference","previous_headings":"","what":"capitalise — capitalise","title":"capitalise — capitalise","text":"Internal","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/capitalise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"capitalise — capitalise","text":"","code":"capitalise(x)"},{"path":"https://docs.ropensci.org/dataaimsr/reference/capitalise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"capitalise — capitalise","text":"x character","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/data_doi.html","id":null,"dir":"Reference","previous_headings":"","what":"AIMS Dataset DOI retriever — data_doi","title":"AIMS Dataset DOI retriever — data_doi","text":"Returns DOI given dataset","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/data_doi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AIMS Dataset DOI retriever — data_doi","text":"","code":"data_doi(target)"},{"path":"https://docs.ropensci.org/dataaimsr/reference/data_doi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AIMS Dataset DOI retriever — data_doi","text":"target character vector length 1 specifying dataset. weather temp_loggers currently allowed.","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/data_doi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"AIMS Dataset DOI retriever — data_doi","text":"character vector containing dataset DOI string.","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/data_doi.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AIMS Dataset DOI retriever — data_doi","text":"AIMS Datacentre adc@aims.gov.au","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/data_doi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AIMS Dataset DOI retriever — data_doi","text":"","code":"if (FALSE) { library(dataaimsr) weather_doi <- data_doi(\"weather\") ssts_doi <- data_doi(\"temp_loggers\") }"},{"path":"https://docs.ropensci.org/dataaimsr/reference/dataaimsr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"The 'dataaimsr' package. — dataaimsr-package","title":"The 'dataaimsr' package. — dataaimsr-package","text":"dataaimsr Australian Institute Marine Science (AIMS) Data Platform R package, provides user easy access datasets AIMS Data Platform API. Please see ?aims_data details.","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/dataaimsr-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The 'dataaimsr' package. — dataaimsr-package","text":"Australian Institute Marine Science (AIMS). (2017). AIMS Sea Water Temperature Observing System (AIMS Temperature Logger Program) https://doi.org/10.25845/5b4eb0f9bb848 Australian Institute Marine Science (AIMS). (2017). Northern Australia Automated Marine Weather Oceanographic Stations, https://doi.org/10.25845/5c09bf93f315d","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/extract_map_coord.html","id":null,"dir":"Reference","previous_headings":"","what":"extract_map_coord — extract_map_coord","title":"extract_map_coord — extract_map_coord","text":"Internal","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/extract_map_coord.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract_map_coord — extract_map_coord","text":"","code":"extract_map_coord(x, ...)"},{"path":"https://docs.ropensci.org/dataaimsr/reference/extract_map_coord.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract_map_coord — extract_map_coord","text":"x sfc_POINT ... Additional argument \"pos\" internal function","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/find_api_key.html","id":null,"dir":"Reference","previous_headings":"","what":"AIMS API Key retriever — find_api_key","title":"AIMS API Key retriever — find_api_key","text":"function tries search API Key","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/find_api_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AIMS API Key retriever — find_api_key","text":"","code":"find_api_key(api_key)"},{"path":"https://docs.ropensci.org/dataaimsr/reference/find_api_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AIMS API Key retriever — find_api_key","text":"api_key AIMS Data Platform API Key","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/find_api_key.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"AIMS API Key retriever — find_api_key","text":"Either character vector API Key found .Renviron , missing entirely, error message.","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/find_api_key.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"AIMS API Key retriever — find_api_key","text":"AIMS Data Platform R Client provides easy access data sets R applications AIMS Data Platform API. AIMS Data Platform requires API Key requests, can obtained link. preferred API Keys stored code. recommend storing environment variable AIMS_DATAPLATFORM_API_KEY permanently user's .Renviron file order load API Key automatically. two types data currently available AIMS Data Platform API: Weather Sea Water Temperature Loggers. searched internally via unique DOI identifiers. one data type time can passed argument target. list arguments filters can exposed Weather Sea Water Temperature Loggers using function aims_expose_attributes. Note present user can inspect range dates temperature loggers data (see usage argument summary examples ). , argument summary must either string \"summary--series\" \"summary--deployment\". cases, time filters ignored. Details available dates dataset time series can accessed via Metadata AIMS Data Platform API. raise caveat time boundaries important; data collected small time intervals, window just days can yield large datasets. query return error reaches system's memory capacity. reason, version 1.1.0 onwards, offering possibility downloading mean daily aggregated version. , user must set summary = \"daily\". particular case, query filter taken account.","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/find_api_key.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AIMS API Key retriever — find_api_key","text":"AIMS Datacentre adc@aims.gov.au","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/handle_error.html","id":null,"dir":"Reference","previous_headings":"","what":"GET error handler — handle_error","title":"GET error handler — handle_error","text":"Displays error status","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/handle_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GET error handler — handle_error","text":"","code":"handle_error(dt_req)"},{"path":"https://docs.ropensci.org/dataaimsr/reference/handle_error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GET error handler — handle_error","text":"dt_req URL GET output","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/handle_error.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GET error handler — handle_error","text":"character vector conveying error message.","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/handle_error.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"GET error handler — handle_error","text":"function retrieves status content dt_req via httr package.","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/handle_error.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"GET error handler — handle_error","text":"AIMS Datacentre adc@aims.gov.au","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/is_aimsdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks if argument is a aimsdf object — is_aimsdf","title":"Checks if argument is a aimsdf object — is_aimsdf","text":"Checks argument aimsdf object","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/is_aimsdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks if argument is a aimsdf object — is_aimsdf","text":"","code":"is_aimsdf(x)"},{"path":"https://docs.ropensci.org/dataaimsr/reference/is_aimsdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks if argument is a aimsdf object — is_aimsdf","text":"x R object","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/json_results.html","id":null,"dir":"Reference","previous_headings":"","what":"fromJSON data request — json_results","title":"fromJSON data request — json_results","text":"Wrapper function","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/json_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fromJSON data request — json_results","text":"","code":"json_results(dt_req)"},{"path":"https://docs.ropensci.org/dataaimsr/reference/json_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fromJSON data request — json_results","text":"dt_req URL GET output","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/json_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fromJSON data request — json_results","text":"aims_data returns data.frame class aimsdf. summary %% c(\"summary--series\", \"summary--deployment\"), output shows summary information target dataset (.e. weather temperature loggers) (NB: currently, summary works temperature logger database). summary passed additional argument, output contains raw monitoring data. summary = \"daily\", output contains mean daily aggregated monitoring data. output also contains five attributes (empty strings summary passed additional argument): metadataa DOI link containing metadata record data series. citationthe citation information particular dataset. parametersThe measured parameters comprised output. typeThe type dataset. Either \"monitoring\" summary specified, \"monitoring (daily aggregation)\" summary = \"daily\", \"summary--\" otherwise. targetThe input target.","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/json_results.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"fromJSON data request — json_results","text":"function submits dt_req data request via fromJSON.","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/json_results.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"fromJSON data request — json_results","text":"AIMS Datacentre adc@aims.gov.au","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/make_base_end_pt.html","id":null,"dir":"Reference","previous_headings":"","what":"Expose available query filters — make_base_end_pt","title":"Expose available query filters — make_base_end_pt","text":"Expose available query filters allowed parsed either via argument summary filters aims_data","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/make_base_end_pt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expose available query filters — make_base_end_pt","text":"","code":"make_base_end_pt(doi, aims_version = NA)"},{"path":"https://docs.ropensci.org/dataaimsr/reference/make_base_end_pt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expose available query filters — make_base_end_pt","text":"doi Digital Object Identifier chosen AIMS data series aims_version character string defining version database. Must \"/v1.0\" \"-v2.0\". none provided, \"-v2.0\" (recent) used.","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/make_base_end_pt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Expose available query filters — make_base_end_pt","text":"AIMS Datacentre adc@aims.gov.au","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/make_pretty_colour.html","id":null,"dir":"Reference","previous_headings":"","what":"make_pretty_colour — make_pretty_colour","title":"make_pretty_colour — make_pretty_colour","text":"Internal","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/make_pretty_colour.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"make_pretty_colour — make_pretty_colour","text":"","code":"make_pretty_colour(x, alpha_ = 0.55)"},{"path":"https://docs.ropensci.org/dataaimsr/reference/make_pretty_colour.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"make_pretty_colour — make_pretty_colour","text":"x character alpha_ numeric","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/make_pretty_data_label.html","id":null,"dir":"Reference","previous_headings":"","what":"make_pretty_data_label — make_pretty_data_label","title":"make_pretty_data_label — make_pretty_data_label","text":"Internal","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/make_pretty_data_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"make_pretty_data_label — make_pretty_data_label","text":"","code":"make_pretty_data_label(x)"},{"path":"https://docs.ropensci.org/dataaimsr/reference/make_pretty_data_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"make_pretty_data_label — make_pretty_data_label","text":"x character","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/next_page_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Further data requests via the AIMS Data Platform API — next_page_data","title":"Further data requests via the AIMS Data Platform API — next_page_data","text":"Similar page_data, cases #' multiple URLs data retrieval","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/next_page_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Further data requests via the AIMS Data Platform API — next_page_data","text":"","code":"next_page_data(url, api_key = NULL, ...)"},{"path":"https://docs.ropensci.org/dataaimsr/reference/next_page_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Further data requests via the AIMS Data Platform API — next_page_data","text":"url data retrieval URL api_key AIMS Data Platform API Key ... Additional arguments passed internal function update_format","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/next_page_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Further data requests via the AIMS Data Platform API — next_page_data","text":"aims_data returns data.frame class aimsdf. summary %% c(\"summary--series\", \"summary--deployment\"), output shows summary information target dataset (.e. weather temperature loggers) (NB: currently, summary works temperature logger database). summary passed additional argument, output contains raw monitoring data. summary = \"daily\", output contains mean daily aggregated monitoring data. output also contains five attributes (empty strings summary passed additional argument): metadataa DOI link containing metadata record data series. citationthe citation information particular dataset. parametersThe measured parameters comprised output. typeThe type dataset. Either \"monitoring\" summary specified, \"monitoring (daily aggregation)\" summary = \"daily\", \"summary--\" otherwise. targetThe input target.","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/next_page_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Further data requests via the AIMS Data Platform API — next_page_data","text":"AIMS Data Platform R Client provides easy access data sets R applications AIMS Data Platform API. AIMS Data Platform requires API Key requests, can obtained link. preferred API Keys stored code. recommend storing environment variable AIMS_DATAPLATFORM_API_KEY permanently user's .Renviron file order load API Key automatically. two types data currently available AIMS Data Platform API: Weather Sea Water Temperature Loggers. searched internally via unique DOI identifiers. one data type time can passed argument target. list arguments filters can exposed Weather Sea Water Temperature Loggers using function aims_expose_attributes. Note present user can inspect range dates temperature loggers data (see usage argument summary examples ). , argument summary must either string \"summary--series\" \"summary--deployment\". cases, time filters ignored. Details available dates dataset time series can accessed via Metadata AIMS Data Platform API. raise caveat time boundaries important; data collected small time intervals, window just days can yield large datasets. query return error reaches system's memory capacity. reason, version 1.1.0 onwards, offering possibility downloading mean daily aggregated version. , user must set summary = \"daily\". particular case, query filter taken account.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/dataaimsr/reference/next_page_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Further data requests via the AIMS Data Platform API — next_page_data","text":"AIMS Datacentre adc@aims.gov.au","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/page_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Request data via the AIMS Data Platform API — page_data","title":"Request data via the AIMS Data Platform API — page_data","text":"function communicates AIMS Data Platform via AIMS Data Platform API","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/page_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Request data via the AIMS Data Platform API — page_data","text":"","code":"page_data(   doi,   filters = NULL,   api_key = NULL,   summary = NA,   aims_version = NA,   verbose = FALSE )"},{"path":"https://docs.ropensci.org/dataaimsr/reference/page_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Request data via the AIMS Data Platform API — page_data","text":"doi Digital Object Identifier chosen AIMS data series filters list containing set filters data query (see Details). api_key AIMS Data Platform API Key summary summary tables (\"summary--series\" \"summary--deployment\") daily aggregated data (\"daily\") returned instead full data (see Details)? aims_version character string defining version database. Must \"/v1.0\" \"-v2.0\". none provided, \"-v2.0\" (recent) used. verbose links printed screen? Used debugging ","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/page_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Request data via the AIMS Data Platform API — page_data","text":"aims_data returns data.frame class aimsdf. summary %% c(\"summary--series\", \"summary--deployment\"), output shows summary information target dataset (.e. weather temperature loggers) (NB: currently, summary works temperature logger database). summary passed additional argument, output contains raw monitoring data. summary = \"daily\", output contains mean daily aggregated monitoring data. output also contains five attributes (empty strings summary passed additional argument): metadataa DOI link containing metadata record data series. citationthe citation information particular dataset. parametersThe measured parameters comprised output. typeThe type dataset. Either \"monitoring\" summary specified, \"monitoring (daily aggregation)\" summary = \"daily\", \"summary--\" otherwise. targetThe input target.","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/page_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Request data via the AIMS Data Platform API — page_data","text":"AIMS Data Platform R Client provides easy access data sets R applications AIMS Data Platform API. AIMS Data Platform requires API Key requests, can obtained link. preferred API Keys stored code. recommend storing environment variable AIMS_DATAPLATFORM_API_KEY permanently user's .Renviron file order load API Key automatically. two types data currently available AIMS Data Platform API: Weather Sea Water Temperature Loggers. searched internally via unique DOI identifiers. one data type time can passed argument target. list arguments filters can exposed Weather Sea Water Temperature Loggers using function aims_expose_attributes. Note present user can inspect range dates temperature loggers data (see usage argument summary examples ). , argument summary must either string \"summary--series\" \"summary--deployment\". cases, time filters ignored. Details available dates dataset time series can accessed via Metadata AIMS Data Platform API. raise caveat time boundaries important; data collected small time intervals, window just days can yield large datasets. query return error reaches system's memory capacity. reason, version 1.1.0 onwards, offering possibility downloading mean daily aggregated version. , user must set summary = \"daily\". particular case, query filter taken account.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/dataaimsr/reference/page_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Request data via the AIMS Data Platform API — page_data","text":"AIMS Datacentre adc@aims.gov.au","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/plot.aimsdf.html","id":null,"dir":"Reference","previous_headings":"","what":"plot.aimsdf — plot.aimsdf","title":"plot.aimsdf — plot.aimsdf","text":"Plotting options aimsdf objects","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/plot.aimsdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot.aimsdf — plot.aimsdf","text":"","code":"# S3 method for aimsdf plot(x, ..., ptype, pars)"},{"path":"https://docs.ropensci.org/dataaimsr/reference/plot.aimsdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot.aimsdf — plot.aimsdf","text":"x object class aimsdf returned aims_data. ... used. ptype Type plot. Can either \"time_series\" \"map\". pars parameters plot? relevant ptype \"time_series\"","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/plot.aimsdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot.aimsdf — plot.aimsdf","text":"object class ggplot.","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/plot.aimsdf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plot.aimsdf — plot.aimsdf","text":"Currently plots customised. Summary datasets can represented maps.","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/plot.aimsdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plot.aimsdf — plot.aimsdf","text":"","code":"if (FALSE) { library(dataaimsr) wdf <- aims_data(\"weather\", api_key = NULL,                  filters = list(site = \"Yongala\",                                 from_date = \"2018-01-01\",                                 thru_date = \"2018-01-02\")) plot(wdf, ptype = \"map\") plot(wdf, ptype = \"time_series\") # summary-by- datasets can only return maps sdf <- aims_data(\"temp_loggers\", api_key = NULL,                  summary = \"summary-by-deployment\") plot(sdf, ptype = \"map\") }"},{"path":"https://docs.ropensci.org/dataaimsr/reference/print.aimsdf.html","id":null,"dir":"Reference","previous_headings":"","what":"print.aimsdf — print.aimsdf","title":"print.aimsdf — print.aimsdf","text":"print.aimsdf","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/print.aimsdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print.aimsdf — print.aimsdf","text":"","code":"# S3 method for aimsdf print(x, ...)"},{"path":"https://docs.ropensci.org/dataaimsr/reference/print.aimsdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print.aimsdf — print.aimsdf","text":"x object class aimsdf returned aims_data. ... used.","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/print.aimsdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"print.aimsdf — print.aimsdf","text":"list containing summary model fit returned brmsfit model.","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/process_request.html","id":null,"dir":"Reference","previous_headings":"","what":"Format json_results output — process_request","title":"Format json_results output — process_request","text":"Wrapper function","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/process_request.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format json_results output — process_request","text":"","code":"process_request(dt_req, next_page = FALSE, ...)"},{"path":"https://docs.ropensci.org/dataaimsr/reference/process_request.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format json_results output — process_request","text":"dt_req URL GET output next_page Logical. multi-url request? ... Additional arguments passed internal function update_format","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/process_request.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format json_results output — process_request","text":"aims_data returns data.frame class aimsdf. summary %% c(\"summary--series\", \"summary--deployment\"), output shows summary information target dataset (.e. weather temperature loggers) (NB: currently, summary works temperature logger database). summary passed additional argument, output contains raw monitoring data. summary = \"daily\", output contains mean daily aggregated monitoring data. output also contains five attributes (empty strings summary passed additional argument): metadataa DOI link containing metadata record data series. citationthe citation information particular dataset. parametersThe measured parameters comprised output. typeThe type dataset. Either \"monitoring\" summary specified, \"monitoring (daily aggregation)\" summary = \"daily\", \"summary--\" otherwise. targetThe input target.","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/process_request.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Format json_results output — process_request","text":"function checks errors dt_req data request processes result via json_results.","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/process_request.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Format json_results output — process_request","text":"AIMS Datacentre adc@aims.gov.au","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/summary.aimsdf.html","id":null,"dir":"Reference","previous_headings":"","what":"summary.aimsdf — summary.aimsdf","title":"summary.aimsdf — summary.aimsdf","text":"summary.aimsdf","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/summary.aimsdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summary.aimsdf — summary.aimsdf","text":"","code":"# S3 method for aimsdf summary(object, ...)"},{"path":"https://docs.ropensci.org/dataaimsr/reference/summary.aimsdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summary.aimsdf — summary.aimsdf","text":"object object class aimsdf returned aims_data. ... Unused.","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/summary.aimsdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"summary.aimsdf — summary.aimsdf","text":"list containing summary info input data.frame.","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/update_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Format fromJSON output list — update_format","title":"Format fromJSON output list — update_format","text":"fromJSON returns list, format list names","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/update_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format fromJSON output list — update_format","text":"","code":"update_format(results, doi)"},{"path":"https://docs.ropensci.org/dataaimsr/reference/update_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format fromJSON output list — update_format","text":"results fromJSON list generated json_results. doi Digital Object Identifier chosen AIMS data series","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/update_format.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format fromJSON output list — update_format","text":"aims_data returns data.frame class aimsdf. summary %% c(\"summary--series\", \"summary--deployment\"), output shows summary information target dataset (.e. weather temperature loggers) (NB: currently, summary works temperature logger database). summary passed additional argument, output contains raw monitoring data. summary = \"daily\", output contains mean daily aggregated monitoring data. output also contains five attributes (empty strings summary passed additional argument): metadataa DOI link containing metadata record data series. citationthe citation information particular dataset. parametersThe measured parameters comprised output. typeThe type dataset. Either \"monitoring\" summary specified, \"monitoring (daily aggregation)\" summary = \"daily\", \"summary--\" otherwise. targetThe input target.","code":""},{"path":"https://docs.ropensci.org/dataaimsr/reference/update_format.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Format fromJSON output list — update_format","text":"AIMS Datacentre adc@aims.gov.au","code":""},{"path":"https://docs.ropensci.org/dataaimsr/news/index.html","id":"dataaimsr-110","dir":"Changelog","previous_headings":"","what":"dataaimsr 1.1.0","title":"dataaimsr 1.1.0","text":"Added capacity download daily aggregated Sea Water Temperature Loggers dataset","code":""},{"path":"https://docs.ropensci.org/dataaimsr/news/index.html","id":"dataaimsr-103","dir":"Changelog","previous_headings":"","what":"dataaimsr 1.0.3","title":"dataaimsr 1.0.3","text":"Added aims_* prefix exported functions aims_data, aims_filter_values aims_expose_attributes now take string target rather string DOI input argument aims_data aims_filter_values fail gracefully now input filter parameters incorrect internet connection aims_data_doi now non-exported data_doi Important changes pertaining aims_data: Always returns data.frame Contains ’s class called aimsdf contains print, summary plot methods Contains three additional exposed helper functions allow user extract metadata/citation/parameter attributes. Example set reduced minimal amount plot method class aimsdf displays either map time series improved test coverage","code":""},{"path":"https://docs.ropensci.org/dataaimsr/news/index.html","id":"dataaimsr-102","dir":"Changelog","previous_headings":"","what":"dataaimsr 1.0.2","title":"dataaimsr 1.0.2","text":"Implemented summary datasets Temperature Loggers dataset via aims_data Implemented expose_attributes() show filters accepted different datasets restrict filter_values expel info sites, series parameters Using parsedate standardise date strings account time zone Created new vignette explaining basic usage package","code":""}]
